[{"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/index.js":"1","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/App.js":"2","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Movies.js":"3","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Header.js":"4","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Footer.js":"5","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Modal.js":"6","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Pagination.js":"7"},{"size":222,"mtime":1607970251000,"results":"8","hashOfConfig":"9"},{"size":2187,"mtime":1608208519000,"results":"10","hashOfConfig":"9"},{"size":1479,"mtime":1608208448000,"results":"11","hashOfConfig":"9"},{"size":1063,"mtime":1608213489000,"results":"12","hashOfConfig":"9"},{"size":173,"mtime":1608043093000,"results":"13","hashOfConfig":"9"},{"size":482,"mtime":1608155044000,"results":"14","hashOfConfig":"9"},{"size":514,"mtime":1608212488000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"gqx097",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/index.js",[],["32","33"],"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/App.js",["34"],"import React,{useEffect, useState} from 'react'\nimport Header from './components/Header'\nimport Movies from './components/Movies'\nimport Modal from './components/Modal'\nimport Footer from './components/Footer'\n\nconst API_KEY = '7bad066f3ffa3daf68ae80d43ff12b31'\n\nfunction App() {\n\n  //Setting state here\n  const[loading, setLoading] = useState(true)\n  const[posts, setPosts] = useState([])\n  const [page,setPage] = useState(1)\n  const[type, setType] = useState('popular')\n  //State for 100 posts(5)\n  const [totalpages, setTotalPages] = useState(5)\n  const [description, setDescription] = useState({\n    id:undefined, \n    title:undefined, \n    description:undefined,\n    img:undefined \n  })\n  const[modaltoggle, setModalToggle] = useState(false)\n\nuseEffect(()=> {\n\n  //Making the call to the API and setting state not sure if keep key here? Remember 100 latest posts! Maybe we need to loop over the fetch  times?\n  const apiCall = async ()=>{\n  const URL = `https://api.themoviedb.org/3/movie/${type}?api_key=${API_KEY}&language=en-US&page=${page}`\n    //hide API-key later?\n  await fetch(URL)\n  .then(res => res.json())\n  .then(data => setPosts(data))\n  .catch(err => console.log(err))\n  \n  setLoading(false)\n  \n}\napiCall()\n\n\n},[type])\n  //console.log('our posts',posts)\n  //console.log('total pages',posts.total_pages)\n\nconst handleClick = async (num) => {\n\n  setLoading(true)\n  \n    const URL = `https://api.themoviedb.org/3/movie/${type}?api_key=${API_KEY}&language=en-US&page=${num}`\n      //hide API-key later\n    await fetch(URL)\n    .then(res => res.json())\n    .then(data => setPosts(data))\n    .catch(err => console.log(err))\n\n    setLoading(false)\n\n}\n\nconst handleModal =()=> {\n    setModalToggle(prev => !prev)\n}\n\n//console.log(posts)\n\nreturn (\n    <>\n      <Modal description={description} modaltoggle={modaltoggle} handleModal={handleModal} />\n      <Header totalpages={totalpages} setTotalPages={setTotalPages} page={page} setPage={setPage} setType={setType} handleClick={handleClick} />\n      <Movies loading={loading} setLoading={setLoading} posts={posts} handleModal={handleModal} setDescription={setDescription} />\n      <Footer />\n    </>\n  )\n}\n\nexport default App;\n","/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Movies.js",[],"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Header.js",["35","36"],"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Footer.js",[],"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Modal.js",[],"/Users/niclasbinnquist/Desktop/dev/tmdb-forefront/src/components/Pagination.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":43,"column":3,"nodeType":"44","endLine":43,"endColumn":9,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":15,"nodeType":"48","messageId":"49","endLine":1,"endColumn":23},{"ruleId":"42","severity":1,"message":"50","line":14,"column":7,"nodeType":"44","endLine":14,"endColumn":9,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":15,"nodeType":"48","messageId":"49","endLine":1,"endColumn":23},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'setTotalPages' and 'totalpages'. Either include them or remove the dependency array. If 'setTotalPages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [page, type]",{"range":"60","text":"61"},"Update the dependencies array to be: [setTotalPages, totalpages]",{"range":"62","text":"63"},[1230,1236],"[page, type]",[355,357],"[setTotalPages, totalpages]"]